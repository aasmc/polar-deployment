version: "3.8"
services:
  # Applications
  catalog-service:
    depends_on:
      config-service:
        condition: service_started
      polar-postgres:
        condition: service_healthy
    image: "ghcr.io/aasmc/catalogservice"
    container_name: "catalog-service"
    ports:
      - 9001:9001
      - 8001:8001
    networks:
      backend:
        aliases:
          - "catalog-service"
    environment:
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 8001
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_PROFILES_ACTIVE=testdata
  config-service:
    image: "ghcr.io/aasmc/config-service"
    container_name: "config-service"
    ports:
      - 8888:8888
      - 9888:9888
    networks:
      backend:
        aliases:
          - "config-service"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=9888

  order-service:
    depends_on:
      polar-postgres:
        condition: service_healthy
      polar-rabbitmq:
        condition: service_started
      config-service:
        condition: service_started
    image: "ghcr.io/aasmc/order-service"
    container_name: "order-service"
    ports:
      - 9002:9002
      - 8002:8002
    networks:
      backend:
        aliases:
          - "order-service"
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8002
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:9001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  edge-service:
    depends_on:
      polar-postgres:
        condition: service_healthy
      config-service:
        condition: service_started
    image: "ghcr.io/aasmc/edge-service"
    container_name: "edge-service"
    ports:
      - 9000:9000
      - 8000:8000
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8000
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8000
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_REDIS_HOST=polar-redis
    networks:
      backend:
        aliases:
          - "edge-service"
  dispatcher-service:
    depends_on:
      - polar-rabbitmq
    image: "ghcr.io/aasmc/dispatcher-service"
    container_name: dispatcher-service
    ports:
      - 9003:9003
      - 8003:8003
    networks:
      backend:
        aliases:
          - "dispatcher-service"
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8002
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8003
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

          # Backing services
  polar-postgres:
    image: "postgres:15.1"
    container_name: "polar-postgres"
    ports:
      - 5432:5432
    networks:
      backend:
        aliases:
          - "polar-postgres"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  polar-redis:
    image: "redis:7.0"
    container_name: "polar-redis"
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "polar-redis"

  polar-rabbitmq:
    image: rabbitmq:3.11-management
    container_name: polar-rabbitmq
    ports:
      - 5672:5672 # the port where RabbitMQ listens for AMPQ requests
      - 15672:15672 # the port that exposes the management GUI
    networks:
      backend:
        aliases:
          - "polar-rabbitmq"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  polar-keycloak:
    image: quay.io/keycloak/keycloak:19.0
    container_name: "polar-keycloak"
    command: start-dev # starts Keycloak in dev mode using an embedded DB
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - 8080:8080
    networks:
      backend:
        aliases:
          - "polar-keycloak"

networks:
  backend:
    driver: bridge